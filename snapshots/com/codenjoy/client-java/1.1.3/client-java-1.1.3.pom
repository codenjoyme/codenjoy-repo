<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.codenjoy</groupId>
    <artifactId>client-java</artifactId>
    <version>1.1.3</version>

    <properties>
        <module.name>client-java</module.name>
        <build.time>${maven.build.timestamp}</build.time>

        <java.version>11</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring-boot-dependencies.version>2.1.18.RELEASE</spring-boot-dependencies.version>

        <!-- please do not update these versions
             they are not in spring boot  -->
        <commons-text.version>1.9</commons-text.version>
        <json.version>20180813</json.version> <!-- do not update -->
        <java-web-socket.version>1.5.1</java-web-socket.version>
        <reflections.version>0.9.11</reflections.version> <!-- do not update -->
        <fest-reflect.version>1.4.1</fest-reflect.version>
        <fest-assert.version>1.4</fest-assert.version>
        <!-- end -->

        <!-- Testing -->
        <pitest.version>1.6.4</pitest.version>
        <!-- end -->

        <!-- Maven -->
        <maven-compiler.version>3.8.1</maven-compiler.version>
        <maven-resources.version>3.2.0</maven-resources.version>
        <maven-license.version>2.0.0</maven-license.version>
        <maven-antrun.version>3.0.0</maven-antrun.version>
        <maven-source-plugin.version>3.2.0</maven-source-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>

        <user.resources>src/main/webapp/resources/user</user.resources>
        <client.sources.file>java-client.zip</client.sources.file>
        <client.sources>${user.resources}/${client.sources.file}</client.sources>
    </properties>

    <repositories>
        <repository>
            <id>codenjoy-releases</id>
            <url>https://github.com/codenjoyme/codenjoy-repo/raw/master/snapshots</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>mutation</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>${pitest.version}</version>
                        <executions>
                            <execution>
                                <!-- Плагин отвечает за мутационное тестирование.
                                     Включается для игр ключом -Pmutation -->
                                <id>[##5]-mutation-testing</id>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <targetClasses>
                                <param>com.codenjoy.dojo.*</param>
                            </targetClasses>
                            <targetTests>
                                <param>com.codenjoy.dojo.*</param>
                            </targetTests>
                            <excludedTestClasses>
                                <excludedTestClass>**Smoke*Test</excludedTestClass>
                                <excludedTestClass>**Performance*Test</excludedTestClass>
                            </excludedTestClasses>
                            <reportsDirectory>${project.basedir}/pitest/</reportsDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jar-with-dependencies</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <executions>
                            <execution>
                                <!-- Плагин отвечает за сборку запускного
                                     jar -->
                                <id>[##9]-make-assembly-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <finalName>client-exec</finalName>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                    <mainClass>com.codenjoy.dojo.JavaRunner</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <version>${java-web-socket.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>

        <!-- TESTING -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>license/**</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин отвечает за очистку папки
                             target перед сборкой -->
                        <id>[##1]-clean-target</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-clean</id>
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${user.resources}</directory>
                            <includes>
                                <include>**/${client.sources.file}</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven-license.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин добавляет во все source файлы
                             header лицензии -->
                        <id>[##2]-add-license-headers</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
                <configuration>
                    <licenseName>gpl_v3</licenseName>
                    <licenseResolver>${project.baseUri}/src/license</licenseResolver>
                    <organizationName>Codenjoy</organizationName>
                    <projectName>Codenjoy - it's a dojo-like platform from developers to developers.</projectName>
                    <inceptionYear>2012</inceptionYear>
                    <canUpdateCopyright>false</canUpdateCopyright>
                    <canUpdateDescription>false</canUpdateDescription>
                    <canUpdateLicense>false</canUpdateLicense>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин отвечает за копирование
                             ресурсов -->
                        <id>[##3]-copy-resources</id>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>default-resources</id>
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <encoding>utf8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин отвечает за компиляцию
                             классов -->
                        <id>[##4]-compile-java</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
                <configuration>
                    <encoding>utf8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <!-- Плагин отвечает за сборку jar
                             файла -->
                        <id>[##6]-make-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/logback.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин добавляет jar с сырцами engine
                             в target -->
                        <id>[##7]-attach-engine-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun.version}</version>
                <executions>
                    <execution>
                        <!-- Плагин собирает engine-libs.zip
                             со всеми артефактами -->
                        <id>[##8]-run-ant</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <zip destfile="${client.sources}"
                                     basedir="."
                                     includes="src/main/java/**,
                                               src/main/resources/**,
                                               src/test/**,
                                               README.*,
                                               mvnw,
                                               mvnw.cmd,
                                               pom.xml"
                                     excludes="target/**"
                                     update="true"/>

                                <copy file="${client.sources}"
                                      todir="target/classes/resources/user"/>

                                <!-- Это нужно для плагина с id [##10]-run-ant engine/pom.xml
                                     ведь при сборке всего CodingDojo/pom.xml он стелает
                                     так как не может найти pom.xml-->
                                <copy todir="${project.build.directory}">
                                    <fileset file="${project.basedir}/pom.xml"/>
                                    <globmapper from="pom.xml" to="${module.name}-${project.version}.pom"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>